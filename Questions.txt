关于链接一章的一些疑问：
    *首先确认一个事实，GOT中我们仅仅为每一个目标文件引用过的"函数"或"全局变量"创建一个8-byte的entry
    *编译器为GOT中每一个entry生成重定位记录, 在load的时候才会重定位这些entry，以此获得这些"函数"和"全局变量"
    *的绝对地址。也就是说在库中大量没有被引用过的函数和变量就不会被记录更不会被重定位。
    *
    *在这个事实的上面我们提问，既然我们可以在链接器重定位之前就获得"哪些函数被引用过"
    *这样的信息，那么是否使用lazy binding对程序运行的开销节省体现在哪儿呢？无用的重定位又是从何谈起。
    *
    *我的理解是，对于一些有分支的代码段，比如if(A){ func1();}  else{func2();}
    *使用lazy binding技术就可以仅仅重定位func1或者func2，而不是在加载的时候就把func1和func2都进行重定位。
    *********************************************************************************************
    ↑已解决


